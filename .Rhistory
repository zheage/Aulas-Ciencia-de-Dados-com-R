alpha = 0.2)),
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = list(continuous = wrap('barDiag',
binwidth = 50,
fill = 'blue',
alpha = 0.2)),
progress = FALSE)
help(wrap)
library(corrplot)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot()
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot(method = 'number')
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot(method = 'number', is.corr = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot(method = 'number')
library(ggplot2)
mtcars
library(readr)
pokemon_stats <- read_csv("G:/Meu Drive/Dados/pokemon_stats.csv")
View(pokemon_stats)
ggplot(data = mtcars)
View(mtcars)
help(mtcars)
ggplot(data = mtcars, aes(x = wt, y = mpg))
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point()
ggplot(data = mtcars, aes(x = wt, y = mpg, color = cyl)) +
geom_point()
mtcars$cyl <- as.factor(mtcars$cyl)
ggplot(data = mtcars, aes(x = wt, y = mpg, color = cyl)) +
geom_point()
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point()
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point() +
theme_bw()
c('Empregado', 'Empregado' 'Não empregado')
coluna_factor <- c('Empregado', 'Empregado' 'Não empregado')
coluna_factor <- c('Empregado', 'Empregado', 'Não empregado')
coluna_factor
as.factor(coluna_factor)
str(coluna_factor)
coluna_factor <- as.factor(coluna_factor)
str(coluna_factor)
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point() +
theme_bw() +
labs(title = 'Diagrama de Dispersão')
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point() +
theme_bw() +
labs(title = 'Diagrama de Dispersão',
x = 'Peso do carro')
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point() +
theme_bw() +
labs(title = 'Diagrama de Dispersão',
x = 'Peso do carro',
y = 'Miles per gallon')
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point() +
theme_bw() +
labs(title = 'Diagrama de Dispersão',
x = 'Peso do carro',
y = 'Milhas por galão')
ggplot(data = mtcars, aes(x = wt,
y = mpg,
color = cyl,
size = cyl)) +
geom_point() +
theme_bw() +
labs(title = 'Diagrama de Dispersão',
x = 'Peso do carro',
y = 'Milhas por galão') +
theme(plot.title = element_text(hjust = 0.5))
theme_update(plot.title = element_text(hjust = 0.5))
ggplot(pokemon_stats, aes(x = Type_1)) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1))
ggplot(pokemon_stats, aes(x = Type_1)) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1,
color = Type_1)) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none')
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label == ..count..),
stat = 'count')
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..),
stat = "count")
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1)
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110)
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110)
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110)
help("theme")
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I')
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo')
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1,
fill = 'red')) +
geom_bar()
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo')
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(angle = 90))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(angle = 45))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(vjust = 0.5))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(vjust = 1))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(hjust = 1))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(hjust = -1))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(hjust = 0.5,
vjust = 0.5))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(hjust = -0.5,
vjust = 0.5))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(angle = 30))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(angle = 30))
ggplot(pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none',
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = ..count..),
stat = "count",
vjust = -1) +
ylim(0, 110) +
xlab('Tipo I') +
labs(y = 'Quantidade',
title = 'Quantidade de Pokémons por Tipo') +
theme(axis.text.x = element_text(angle = 30))
library(dplyr)
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1)
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total))
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total)) %>%
arrange(tot_mean)
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total)) %>%
arrange(tot_mean) %>%
ggplot(aes(x = Type_1, y = tot_mean))
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total)) %>%
arrange(tot_mean) %>%
ggplot(aes(x = Type_1, y = tot_mean)) +
geom_col()
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total)) %>%
arrange(tot_mean) %>%
ggplot(aes(x = Type_1, y = tot_mean,
fill = Type_1)) +
geom_col()
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total)) %>%
arrange(tot_mean) %>%
ggplot(aes(x = Type_1, y = tot_mean,
fill = Type_1)) +
geom_col() +
theme(legend.position = 'none')
pokemon_stats %>%
select(Type_1, Total) %>%
group_by(Type_1) %>%
summarise(tot_mean = mean(Total))
library(readr)
vendas <- read_csv("G:/Meu Drive/Dados/vendas.csv")
View(vendas)
View(vendas)
ggplot(vendas, aes(x = date, y = units)) +
geom_line()
str(vendas)
vendas$date <- as.Date(vendas$date, format = 'd/m/y')
d/m/y
View(vendas)
library(readr)
vendas <- read_csv("G:/Meu Drive/Dados/vendas.csv")
View(vendas)
vendas$date <- as.Date(vendas$date, format = '%d/%m/%y')
str(vendas)
View(vendas)
ggplot(vendas, aes(x = date, y = units)) +
geom_line()
ggplot(vendas, aes(x = date, y = units)) +
geom_line(size = 1)
ggplot(vendas, aes(x = date, y = units)) +
geom_line(size = 1, linetype = 'dashed')
ggplot(vendas, aes(x = date, y = units)) +
geom_line(size = 1, linetype = 'dashed') +
geom_point(size = 2)
potencia <- function(x){
return(x^2)
}
potencia(3)
str(vendas)
read.table(f)
caminho <- file('Downloads/auto-mpg.data')
read.table(f)
read.table(camiho)
read.table(caminho)
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,)
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary))
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point()
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
facet_grid(isLegend~.)
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
facet_grid(isLegendary~.)
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
facet_grid(.~isLegendary)
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = 'lm',
se = FALSE,
col = 'black') +
facet_grid(isLegendary~.)
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = 'lm',
sel = FALSE,
col = 'black')
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = 'lm',
sel = FALSE,
col = 'black') +
facet_grid(.~isLegendary)
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = 'lm',
se = FALSE,
col = 'black') +
facet_grid(.~isLegendary)
salvar_grafico <-
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = 'lm',
se = FALSE,
col = 'black') +
facet_grid(.~isLegendary)
salvar_grafico

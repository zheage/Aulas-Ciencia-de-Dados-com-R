size = 1, color = 'red') +
scale_colour_manual('Legenda',
values = c('blue', 'red'),
labels = c('Cos', 'Sin'))
values = c('blue' = 'cos', 'red' = 'sin')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red') +
scale_colour_manual('Legenda',
values = c('blue' = 'cos', 'red' = 'sin')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red') +
scale_colour_manual('Legenda',
values = c('blue' = 'cos', 'red' = 'sin'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red') +
scale_colour_manual('Legenda',
values = c('cos' = 'blue','sin' = 'red'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red') +
scale_colour_manual('Legenda',
values = c('cos' = 'blue','sin' = 'red'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = 'cos') +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = 'cos') +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = 'sin')
help(stat_function)
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = TRUE)
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = TRUE) +
scale_colour_manual('Legenda',
values = c('cos' = 'blue','sin' = 'red'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = TRUE) +
scale_colour_manual('Legenda',
values = c('cos','sin'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = TRUE) +
scale_colour_manual('Legenda',
labels = c('cos','sin'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
aes(color = 'sin'),
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = TRUE)
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
aes(color = 'sin'),
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
aes(color = 'sin'),
show.legend = TRUE)
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue',
show.legend = TRUE) +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red',
show.legend = TRUE)
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
size = 1, color = 'red')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1, color = 'red')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1, color = 'red') +
scale_colour_manual('Legenda', values = c('blue', 'red'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1, color = 'blue') +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1, color = 'red') +
scale_colour_manual('Legenda', values = c('blue', 'red'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
scale_colour_manual('Legenda', values = c('blue', 'red'))
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1)
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
theme(legend.position = 'top')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
theme(legend.position = 'top') +
labs(legend = 'Legenda')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
theme(legend.position = 'top') +
labs(label = 'Legenda')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
theme(legend.position = 'top') +
labs(colour = 'Legenda')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
theme(legend.position = 'top') +
labs(colour = 'Legenda')
ggplot(data.frame(x = c(0, 20)), aes(x = x)) +
stat_function(fun = cos, geom = 'line',
aes(colour = 'cos'),
size = 1) +
stat_function(fun = sin, geom = 'line',
aes(colour = 'sin'),
size = 1) +
theme(legend.position = 'top') +
labs(title = 'Gráfico de Funções',
colour = 'Legenda')
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50, color = 'black')
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50, color = 'black') +
# Facilita a visualização do eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue') +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .2) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
help(geom_histogram)
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,
stat = 'bin') +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50)) +
geom_density()
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
aes(y = ..density..)
color = 'black',
ggplot(data = pokemon_stats, aes(x = Total, y = ..density..)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50)) +
geom_density()
ggplot(data = pokemon_stats, aes(x = Total, y = ..density..)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50)) +
geom_density(size = 2)
ggplot(data = pokemon_stats, aes(x = Total, y = ..density..)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50)) +
geom_density(size = 1)
ggplot(data = pokemon_stats, aes(x = Total)) +
geom_histogram(binwidth = 50,
color = 'black',
fill = 'blue',
alpha = .3,) +
# Facilita a visualização da variável no eixo x:
scale_x_continuous(breaks = seq(150, 700, 50))
ggplot(pokemon_stats, aes(x = Type_1,
y = Total,
fill = Type_1)) +
geom_boxplot()
ggplot(pokemon_stats, aes(x = Type_1,
y = Total)) +
geom_boxplot()
ggplot(pokemon_stats, aes(x = Type_1,
y = Total,
fill = Type_1)) +
geom_boxplot()
ggplot(pokemon_stats, aes(x = Type_1,
y = Total,
fill = Type_1)) +
geom_boxplot() +
theme(legend.position = 'none')
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "black",
formula = y ~ x) +
facet_grid(isLegendary~.) +
theme(legend.position = "top")
ggplot(data = pokemon_stats, aes(x = Speed, y = Attack,
color = isLegendary)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "black",
formula = y ~ x) +
facet_grid(.~isLegendary) +
theme(legend.position = "top")
library(cowplot)
poke1 <- ggplot(data = pokemon_stats, aes(x = Type_1,
fill = Type_1)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Primario') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
poke2 <- ggplot(data = pokemon_stats, aes(x = Type_1,
fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1) +
#draw_plot_label(label = c(1,2,3), size = 15,
#                x = c(0, 1, 0), y = c(1,1,0.5))
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1)
str(pokemon_stats)
poke2 <- ggplot(data = pokemon_stats, aes(x = Type_1,
fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1)
ggplot(aes(x = Type_1,
fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
poke2 <- pokemon_stats %>% remove_na()
poke2 <- pokemon_stats %>% remove_na()
poke2 <- pokemon_stats %>% remove_na() %>%
ggplot(aes(x = Type_1, fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
poke2 <- pokemon_stats %>% drop_na() %>%
ggplot(aes(x = Type_1, fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
poke2
poke2 <- ggplot(pokemon_stats, aes(x = Type_2, fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1)
help(draw_plot_label)
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1) +
draw_plot_label(label = c(1,2,3), size = 15,
x = c(0, 1, 0), y = c(1,1,0.5))
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1)
poke2 <- pokemon_stats %>% drop_na %>%
ggplot(aes(x = Type_2, fill = Type_2)) +
geom_bar() +
theme(legend.position = 'none') +
geom_text(aes(label = ..count..), stat = "count",
color = 'black', vjust = -1) +
ylim(0,110) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
xlab('Tipo Secundário') +
ylab('Quantidade') +
ggtitle('Quantidade de Pokemons por Tipo')
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke1, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke2, x = 0, y = 1, width = 2, height = 1)
ggdraw(xlim = c(0,2), ylim = c(0,2)) +
draw_plot(poke2, x = 0, y = 0, width = 2, height = 1) +
draw_plot(poke1, x = 0, y = 1, width = 2, height = 1)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs()
library(GGally)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs()
help(ggpairs)
library(GGally)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = 'histogram',
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = 'hist',
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = 'barDiag',
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = 'barDiag',
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = llist(continuous = 'barDiag'),
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = list(continuous = 'barDiag'),
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = list(continuous = wrap('barDiag',
binwidth = 50,
fill = blue,
alpha = 0.2)),
progress = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
ggpairs(diag = list(continuous = wrap('barDiag',
binwidth = 50,
fill = 'blue',
alpha = 0.2)),
progress = FALSE)
help(wrap)
library(corrplot)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot()
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot(method = 'number')
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot(method = 'number', is.corr = FALSE)
pokemon_stats %>%
select(Total, Attack, Defense, Sp_Atk, Sp_Def, Speed) %>%
corrplot(method = 'number')

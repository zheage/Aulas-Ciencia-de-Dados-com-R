mtcars
kable(head(mtcars))
library(kable)
library(knitr)
kable(head(mtcars))
x <- c(1,3,2,5)
x
length(x)
mean(x)
x
x = matrix(data = c(1,2,3,4))
x
x = matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
# Introdução a Probabilidade
# Introdução ao R
help(matrix)
help(data.frame)
names = c('Carol', 'Alfredo', 'Godoberto')
age = c(18, 23, 19)
weight = c(69, 75, 80)
df = data.frame(c(names, age, weight))
df
df = data.frame(names, age, weight)
df
height = c(1.70, 1.80, 1.85)
ICM = weight/height^2
df = data.frame(names, age, weight, height, ICM)
df
69/1.7^2
df = data.frame(nome, est_civil, n_filhos, salario, idade)
nome = c('Guilherme', 'Leon', 'Nilce')
est_civil = c('Solteiro', 'Casado', 'Casado')
n_filhos = c(1, 0, 0)
salario = c(1500, 3000, 3000)
idade = c(21, 39, 32)
df = data.frame(nome, est_civil, n_filhos, salario, idade)
df
kable(df, align = 'c')
# Bibliotecas
library(knit)
# Bibliotecas
library(knitr)
nome = c('Guilherme', 'Leon', 'Nilce')
est_civil = c('Solteiro', 'Casado', 'Casado')
n_filhos = c(1, 0, 0)
salario = c(1500, 3000, 3000)
idade = c(21, 39, 32)
df = data.frame(nome, est_civil, n_filhos, salario, idade)
kable(df, align = 'c')
nome = c('Guilherme', 'Leon', 'Nilce')
est_civil = c('Solteiro', 'Casado', 'Casado')
escolaridade = c('Ensino médio completo',
'Pós-graduação',
'Superior completo',)
nomes = c('alunoA', 'alunoB', 'alunoC',
'alunoD', 'alunoE')
alunoA = c(3,4,5,6,7)
alunoB = c(1,3,5,7,9)
alunoC = c(5,5,5,5,5)
alunoD = c(3,5,5,5,7)
alunoE = c(3,5,5,6,6)
df = data.frame(alunoA, alunoB, alunoC, alunoD, alunoE)
row.names(df) = nomes
df
help(data.frame)
nomes = c('alunoA', 'alunoB', 'alunoC',
'alunoD', 'alunoE')
alunoA = c(3,4,5,6,7)
alunoB = c(1,3,5,7,9)
alunoC = c(5,5,5,5,5)
alunoD = c(3,5,5,5,7)
alunoE = c(3,5,5,6,6)
df = data.frame(alunoA, alunoB, alunoC, alunoD, alunoE,
row.names = nomes)
df
df = data.frame(alunoA, c(alunoB, alunoC, alunoD, alunoE),
row.names = nomes)
df
nomes = c('alunoA', 'alunoB', 'alunoC',
'alunoD', 'alunoE')
alunoA = c(3,4,5,6,7)
alunoB = c(1,3,5,7,9)
alunoC = c(5,5,5,5,5)
alunoD = c(3,5,5,5,7)
alunoE = c(3,5,5,6,6)
df = data.frame(alunoA, alunoB, alunoC, alunoD, alunoE,
row.names = nomes)
df
df$alunoA
df = data.frame(alunoA, rbind(alunoB, alunoC, alunoD, alunoE),
row.names = nomes)
df = data.frame(rbind(alunoA, alunoB, alunoC, alunoD, alunoE),
row.names = nomes)
df
df = data.frame(notas, row.names = nomes)
notas = matrix(3,4,5,6,7,
1,3,5,7,9,
5,5,5,5,5,
3,5,5,5,7,
3,5,5,6,6)
df = data.frame(notas, row.names = nomes)
notas = matrix(3,4,5,6,7,
1,3,5,7,9,
5,5,5,5,5,
3,5,5,5,7,
3,5,5,6,6)
nomes = c('alunoA', 'alunoB', 'alunoC',
'alunoD', 'alunoE')
notas = matrix(c(3,4,5,6,7,
1,3,5,7,9,
5,5,5,5,5,
3,5,5,5,7,
3,5,5,6,6), nrow = 5, ncol = 5, byrow = T)
df = data.frame(notas, row.names = nomes)
df
nomes = c('alunoA', 'alunoB', 'alunoC',
'alunoD', 'alunoE')
notas = matrix(c(3,4,5,6,7,
1,3,5,7,9,
5,5,5,5,5,
3,5,5,5,7,
3,5,5,6,6), nrow = 5, ncol = 5, byrow = T)
df = data.frame(notas, row.names = nomes)
kable(df, align = 'c')
columns(df)
column(df)
col.names(df)
colnames(df)
colnames(df) = c('P1', 'P2', 'P3', 'P4', 'P5')
nomes = c('alunoA', 'alunoB', 'alunoC',
'alunoD', 'alunoE')
notas = matrix(c(3,4,5,6,7,
1,3,5,7,9,
5,5,5,5,5,
3,5,5,5,7,
3,5,5,6,6), nrow = 5, ncol = 5, byrow = T)
df = data.frame(notas, row.names = nomes)
colnames(df) = c('P1', 'P2', 'P3', 'P4', 'P5')
kable(df, align = 'c')
kable(df, align = 'c')
df
df[alunoA, ]
df[alunoA]
df[alunoA, ]
df['alunoA', ]
mean(df['alunoA', ])
df['alunoA', ]
mean(df['alunoA', ])
df['alunoA', ]
mean(df['alunoA', ])
df['alunoA', ]
rowMeans
help(rowMeans)
rowMeans(df)
nome = c('Djoko','Wilson','Jiraiya', 'Leon', 'Nilce')
est_civil = c('Solteiro','Casado','Solteiro', 'Casado', 'Casado')
escolaridade = c('Pós-graduação',
'Ensino médio completo',
'Ensino médio completo',
'Ensino médio completo',
'Pós-graduação',
'Superior completo')
n_filhos = c(0, 0, 1, 0, 0)
salario = c(4500, 3000, 1500, 5000, 5500)
idade = c(29, 33, 33, 39, 32)
df = data.frame(nome, est_civil, escolaridade, n_filhos, salario, idade)
nome = c('Djoko','Wilson','Jiraiya', 'Leon', 'Nilce')
est_civil = c('Solteiro','Casado','Solteiro', 'Casado', 'Casado')
escolaridade = c('Pós-graduação',
'Ensino médio completo',
'Ensino médio completo',
'Pós-graduação',
'Superior completo')
n_filhos = c(0, 0, 1, 0, 0)
salario = c(4500, 3000, 1500, 5000, 5500)
idade = c(29, 33, 33, 39, 32)
df = data.frame(nome, est_civil, escolaridade, n_filhos, salario, idade)
kable(df, align = 'c') # Melhor visualização dos dados para este PDF
mode(df)
mode(c(2,3,4))
df$est_civil
mode(df$est_civil)
mode(df$est_civil)
median(df)
median(df$est_civil)
rowMedians
colMedians
median(df, median)
median(df, 2, median)
apply(df, 2, median)
apply(df, median)
apply(df, 2, median)
apply(df, median)
apply(df, 2, median)
help(apply)
# Aplicaremos a função median para todas as colunas:
apply(df, margin = 2, median)
help(apply)
colMeans(df)
colMeans(df[, c('n_filhos', 'salario')])
colMeans(df[, c('idade','n_filhos', 'salario')])
colMeans(df[, c('idade', 'salario')])
mean(df$salario)
dim(iris)
length(iris)
# Medidas Descritivas
```{r include = FALSE}
iris
head(iris)
describe(iris)
summary(iris)
# A função head() mostra os cinco primeiros itens de data.frame:
head(iris)
# A função head() mostra os cinco primeiros itens de data.frame:
head(iris)
dim(iris)
str(iris)
help(str)
summary(iris)
boxplot(iris$Sepal.Length)
# Bibliotecas
library(knitr)
library(ggplot2)
ggplot(data = iris) + geom_boxplot(aes(y = 'Sepal.Length'))
ggplot(data = iris) + geom_boxplot(aes(x = 'Sepal.Length'))
ggplot(data = iris) + geom_boxplot(aes('Sepal.Length'))
ggplot(data = iris, aes('Sepal.Length')) + geom_boxplot()
ggplot(data = iris, aes(y = 'Sepal.Length')) + geom_boxplot()
ggplot(data = iris, aes(x = 'Species', y = 'Sepal.Length')) + geom_boxplot()
ggplot(data = iris, aes(x = 'Sepal.Length', y = 'Sepal.Length')) +
geom_boxplot()
ggplot(data = iris, aes(x = 'Sepal.Length')) +
geom_boxplot()
ggplot(data = iris, aes(x = 'a',y = 'Sepal.Length')) +
geom_boxplot()
ggplot(data = iris, aes(x = factor(0),y = 'Sepal.Length')) +
geom_boxplot()
ggplot(data = iris, aes(y = 'Sepal.Length')) +
geom_boxplot()
iris
iris$Sepal.Length
ggplot(data = iris, aes('Sepal.Length')) +
geom_boxplot()
ggplot(data = iris, aes(Sepal.Length)) +
geom_boxplot()
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot()
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(x = 'a')
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(x = '')
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(x = '', xticks = '')
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(x = '') +
theme(axis.ticks.x = element_blank())
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(x = '') +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
theme(axis.text.x = element_blank())
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
title = 'a')
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(title = 'Boxplot Iris')
hist(iris$Sepal.Length)
ggplot(data = iris, aes(y = iris$Sepal.Length)) +
geom_hist()
ggplot(data = iris, aes(y = iris$Sepal.Length)) +
geom_hist()
ggplot(data = iris, aes(y = iris$Sepal.Length)) +
geom_histogram()
ggplot(data = iris, aes(x = iris$Sepal.Length)) +
geom_histogram()
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram()
iris$Sepal.Length
min(iris$Sepal.Length)
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
by = 20))
ggplot(data = iris, aes(x = Sepal.Length, y = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
by = 20))
ggplot(data = iris, aes(x = Sepal.Length, y = ..count..)) +
geom_histogram(stat = 'count', bins = 20)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20)
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram(stat = 'count', bins = 20)
ggplot(data = iris, aes(Sepal.Length)) +
geom_histogram(stat = 'count', bins = 20)
ggplot(data = iris, aes(Sepal.Length)) +
geom_histogram(stat = 'count',aes(fill = ..count..), bins = 20)
ggplot(data = iris, aes(Sepal.Length, ..count..)) +
geom_histogram(stat = 'count', bins = 20)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_continous(breaks = seq(0, 9, len = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_continous(breaks = seq(0, 9, len = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_continous(breaks = seq(0, 10, by = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_discrete(breaks = seq(0, 10, by = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_continous(breaks = seq(0, 10, by = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 20) +
scale_x_continuous(breaks = seq(0, 10, by = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count') +
scale_x_continuous(breaks = seq(0, 10, by = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 10) +
scale_x_continuous(breaks = seq(0, 10, by = 10))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bins = 10)
help(geom_histogram)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', bin = 10)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count')
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count')
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', binwidth = 0.5)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count', binwidth = 2)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(stat = 'count')
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram()
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(seq(0, 10, by = 1))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 10, by = 1))
seq(0, 10, by = 1)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 10, by = 1))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 10, by = 0.5))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 10, by = 0.25))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(0, 10, by = 0.5))
iris$Sepal.Length
min(iris$Sepal.Length)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
by = 0.5))
seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
by = 0.5
seq(min(iris$Sepal.Length),
seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
by = 0.5)
seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
lenght = 20)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
len = 20))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
len = 20)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = round(seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
len = 20))) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
len = 20)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 20) +
scale_x_continuous(breaks = seq(min(iris$Sepal.Length),
max(iris$Sepal.Length),
len = 20)) +
theme(axis.text.x = element_text(angle = 45))
min(iris$Sepal.Length)
scale_x_continuous(breaks = seq(1:16) +
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 10) +
scale_x_continuous(breaks = seq(1:16)) +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(bins = 10) +
scale_x_continuous(breaks = seq(1:16))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(binwidth = 1, boundary = 0) +
scale_x_continuous(breaks = seq(1:10))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(binwidth = 0.5, boundary = 0) +
scale_x_continuous(breaks = seq(1:10))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(binwidth = 0.25, boundary = 0) +
scale_x_continuous(breaks = seq(1:10))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(binwidth = 0.25, boundary = 0) +
scale_x_continuous(breaks = seq(1:10, by = 0.25))
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(binwidth = 0.25, boundary = 0) +
scale_x_continuous(breaks = seq(1, 10, by = 0.25))
library(cowplot)
plot_grid(r_basic, ggplot, ncol = 2)
r_basic <- boxplot(iris$Sepal.Length)
ggplot <- ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(title = 'Boxplot Iris')
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
plot_grid(r_basic, ggplot, ncol = 2)
par(mfrow = c(1,2))
par(mfrow = c(1,2))
boxplot(iris$Sepal.Length)
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(title = 'Boxplot Iris')
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
boxplot(iris$Sepal.Length)
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(title = 'Boxplot Iris')
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
hist(iris$Sepal.Length)
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(title = 'Boxplot Iris') +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
# Bibliotecas
library(knitr)
library(ggplot2)
library(cowplot)
boxplot(iris$Sepal.Length)
ggplot(data = iris, aes(y = Sepal.Length)) +
geom_boxplot() +
labs(title = 'Boxplot Iris') +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
hist(iris$Sepal.Length)
ggplot(data = iris, aes(x = Sepal.Length, fill = ..count..)) +
geom_histogram(binwidth = 0.25, boundary = 0) +
scale_x_continuous(breaks = seq(1, 10, by = 0.25))
